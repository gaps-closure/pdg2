[ x ] rename ir.csv to counts.csv  
[ x ] move PDGNode/Edge counts to counts.csv
[ x ] make sure all possible types from pdg_instance.mzn are included in counts.csv 
[ x ] DistinctFunctionSignatures count in counts.csv
[ x ] DistinctFunctionsUsedAsPointer count in counts.csv
[   ] account AB for every node subtype and edge subtype 
    - [   ] subtype IR globals for module static variables (look at linkage?) 
    - [   ] call annotations should match annotation nodes
    - [   ] only for root parameter nodes 
    - [   ] for all parameter nodes 
[   ] save all relevant files
[   ] level n - 1 to level n tallies for node and edge
[   ] subsubtype the parameter edges
[   ] get information about source level signature via ctags (for struct literals)
[   ] ensure every annotation application must be exported to the mzn

when pdg is extended for function pointers:
PDGEdge.ControlDep.Call.Ind = 
- sum over all indirect call site ci:
    the number of functions that match the call signature
    and also have been referenced by a function pointer 
- for each i in DistinctFunctionSignatures:
   functions which match that signature

missing pdg edge dependency on a global constant






Edge counts:
- [ x ] direct call invocation edges (same as node count)
- [ x ] indirect call invocation edges (same as node count)
- [ x ] external call invocation edges 

Node counts:
- PDGMainComponentDirect
- PDGNonMainComponentsDirect
- EPDGMainComponentDirectIndirect
- EPDGNonMainComponentsDirectIndirect
- EPDGExtendedComponent
- EPDGNonExtendedComponents


DefUse:
- Anno 
    - Var: pdg: 0, ir: ?
    - Global: pdg: 0, ir: ? 
- VarNode: connects globals to their uses within functions (? which type)
    - Intrinsic: pdg: ?, ir: ?
    - Non-Intrinsic: pdg: ?, ir: ? 
- Intra: 
    - Intrinsic: pdg: 0, ir: ?
    - Non-Intrinsic: reconcile but pdg: ?, ir: ?   